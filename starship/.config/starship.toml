format="""$git_state$git_branch$hostname$python$git_status$custom$cmd_duration
$status$directory$character"""

[directory]
fish_style_pwd_dir_length = 3
truncation_length = 3
truncate_to_repo = true
style = "bold blue"

[hostname]
format = "on [$hostname]($style) "
ssh_only = false
style = "dimmed green"

[git_branch]
format = "[$symbol$branch]($style) "
symbol = " "

[git_status]
ahead = "↑${count}"
diverged = "⇕↑${ahead_count} ↓${behind_count}"
behind = "↓${count}"
untracked = "U"
modified = "M"
style = "red"

[python]
detect_files = []
format = 'via [${symbol}${pyenv_prefix}(\($virtualenv\) )]($style)'

[custom.jjupstreambranch]
when = true
command = '''
jj root > /dev/null && jj log -r 'latest(heads(ancestors(@) & bookmarks()), 1)' --limit 1 --no-graph --ignore-working-copy -T '"jj> " ++ raw_escape_sequence("\x1b[1;35m") ++ bookmarks ++ raw_escape_sequence("\x1b[0m")'
'''

# custom module for jj status
[custom.jj]
ignore_timeout = true
description = "current jj status"
symbol = ""
when = true
command = '''
jj root > /dev/null && jj log --revisions 'ancestors(@, 2)' --no-graph --ignore-working-copy --color always --limit 2 --template '
  separate(" ",
    "|",
    if(current_working_copy, "@", "@-") ++ change_id.shortest(4),
    bookmarks,
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    if(empty, raw_escape_sequence("\x1b[1;32m") ++ "(empty)" ++ raw_escape_sequence("\x1b[0m")),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "…",
      )
    ) ++ raw_escape_sequence("\x1b[0m")
  ) ++ " "
'
'''


# [custom.jj]
# command = '''
# jj log -r@ -n1 --ignore-working-copy --no-graph --color always  -T '
#   separate(" ",
#     bookmarks.map(|x| if(
#         x.name().substr(0, 10).starts_with(x.name()),
#         x.name().substr(0, 10),
#         x.name().substr(0, 9) ++ "…")
#       ).join(" "),
#     tags.map(|x| if(
#         x.name().substr(0, 10).starts_with(x.name()),
#         x.name().substr(0, 10),
#         x.name().substr(0, 9) ++ "…")
#       ).join(" "),
#     surround("\"","\"",
#       if(
#          description.first_line().substr(0, 24).starts_with(description.first_line()),
#          description.first_line().substr(0, 24),
#          description.first_line().substr(0, 23) ++ "…"
#       )
#     ),
#     if(conflict, "conflict"),
#     if(divergent, "divergent"),
#     if(hidden, "hidden"),
#   )
# '
# '''
# when = "jj root"
# symbol = "jj"

[custom.jjstate]
when = true
command = '''
jj root > /dev/null && jj log -r@ -n1 --no-graph -T "" --stat | tail -n1 | sd "(\d+) files? changed, (\d+) insertions?\(\+\), (\d+) deletions?\(-\)" ' ${1}m ${2}+ ${3}-' | sd " 0." ""
'''
